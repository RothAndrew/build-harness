name: verify-build

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/build-harness

jobs:
  socket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Socket
        run: |
          make sbom IMAGE_TO_SCAN=alpine:latest

#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        platform:
#          - linux/amd64
#          - linux/arm64/v8
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=raw,value=${{ github.ref_name }}
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Log in to the Container registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build, don't push
#        id: build
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          platforms: ${{ matrix.platform }}
#          labels: ${{ steps.meta.outputs.labels }}
#          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=false
#          no-cache: true
#      - name: Build SBOM
#        run: |
#          make sbom IMAGE_TO_SCAN=${{env.REGISTRY}}/${{env.IMAGE_NAME}}@${{ steps.build.outputs.digest }}
#      - name: Upload SBOM
#        uses: actions/upload-artifact@v3
#        with:
#          name: sbom-${{matrix.platform}}
#          path: |
#            sbom.cyclonedx.json
#            sbom.spdx.json
#            sbom.syft.json
#            sbom.table.txt
#          if-no-files-found: error
#      - name: Build Vuln Report
#        run: |
#          make vuln-report
#      - name: Upload Vuln Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: vuln-report-${{matrix.platform}}
#          path: |
#            vulns.grype.json
#            vulns.grype.txt
#          if-no-files-found: error

